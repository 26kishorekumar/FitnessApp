# This is a basic workflow to help you get started with Actions

name: Python Application CI/CD Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository code
        uses: actions/checkout@v4

      # Sets up the Python environment on the runner
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify the Python version you want to use

      # Install system dependencies needed for Tkinter GUI testing in a headless environment
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y tk-dev xvfb

      # Install Python dependencies
      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # Run the Pytest unit tests in a headless environment
      # xvfb-run creates a virtual display, allowing the Tkinter components to run
      # without a physical screen.
      - name: Run tests
        run: xvfb-run pytest
